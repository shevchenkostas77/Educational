package multithreading;

/*
User threads - –æ–±—ã—á–Ω–µ –ø–æ—Ç–æ–∫–∏.

       main
        |
        | ------------ T1 (user thread)
        |
        | ------------ T1 (user thread)
        |
    –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ—Ç–æ–∫–∞ Main


–°–æ–∑–¥–∞–ª—Å—è –ø–æ—Ç–æ–∫ main, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—Å–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏ –∏–¥–µ—Ç –µ–≥–æ —Ä–∞–±–æ—Ç–∞. –í–Ω—É—Ç—Ä–∏ –ø–æ—Ç–æ–∫–∞ main
—Å–æ–∑–¥–∞—é—Ç—Å—è, –∫ –ø—Ä–∏–º–µ—Ä—É, –ø–æ—Ç–æ–∫–∏ T1 –∏ –¢2. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∏—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞,
–∫–æ–≥–¥–∞ –≤—Å–µ –µ–µ –ø–æ—Ç–æ–∫–∏ –∑–∞–≤–µ—Ä—à–∞—Ç —Å–≤–æ—é. –¢.–µ. –ø–æ—Ç–æ–∫ main –º–æ–≥ —É–∂–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, –Ω–æ
–µ—Å–ª–∏ –ø–æ—Ç–∫–∏ –¢1 –∏–ª–∏ –¢2 –∏–ª–∏ –¥–∞–∂–µ –æ–Ω–∏ –æ–±–∞ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç –µ—â–µ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞
—Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∏—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –ø–æ—Ç–æ–∫–∏ –¢1 –∏ –¢2 –∑–∞–≤–µ—Ä—à–∞—Ç
—Å–≤–æ—é.

       main
        |
        | ------------ T1 (user thread)
        | ----------------------------------- Daemon thread
        | ------------ T1 (user thread)
        |
    –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ—Ç–æ–∫–∞ Main

–ï—Å–ª–∏, –∫ –ø—Ä–∏–º–µ—Ä—É, —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ—Ç–æ–∫ Daemon - DT1, –ø–æ–º–∏–º–æ –ø–æ—Ç–æ–∫–æ–≤ –¢1 –∏ –¢2. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ
–±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–ª—É–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º, –∫ –ø—Ä–∏–º–µ—Ä—É, main –ø–æ—Ç–æ–∫ –∑–∞–≤—Ä–µ—à–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É,
–Ω–æ –æ–Ω –∂–¥–µ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏, –¥–∞–ª–µ–µ, –∫ –ø—Ä–∏–º–µ—Ä—É, –∑–∞–≤–µ—Ä—à–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –ø–æ—Ç–æ–∫ –¢1, –∞ –ø–æ—Å–ª–µ
—É–∂–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –∏ –ø–æ—Ç–æ–∫ –¢2. –ù–∞ —ç—Ç–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è. –ù–∏–∫—Ç–æ –Ω–µ –±—É–¥–µ—Ç
–∂–¥–∞—Ç—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–æ—Ç–æ–∫–∞ Daemon. –ï—Å–ª–∏ user threads –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, —Ç–æ –∏ –≤—Å—è
–ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.

Daemon threads (—Å –∞–Ω–≥–ª. –ø–æ—Ç–æ–∫–∏ –¥–µ–º–æ–Ω–∞ üòà) - –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –∏
–æ–∫–∞–∑–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ User –ø–æ—Ç–æ–∫–∞–º.
–ü—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ User –ø–æ—Ç–æ–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–≤–æ—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –Ω–µ
–¥–æ–∂–∏–¥–∞—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã Daemon –ø–æ—Ç–æ–∫–æ–≤. –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞, –µ—Å–ª–∏ —Å–∞–º–∏—Ö User
–ø–æ—Ç–æ–∫–æ–≤ –Ω–µ—Ç, —Ç–æ –∏–º –æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∏–∫–∞–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–µ –Ω—É–∂–Ω–æ –∏ –ø–æ—ç—Ç–æ–º—É –º–æ–∂–Ω–æ –Ω–µ –¥–æ–∂–∏–¥–∞—Ç—å
–æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–æ—Ç–æ–∫–∞ Daemon. Daemon –ø–æ—Ç–æ–∫–∏ –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∫–∞–∫–∏—Ö-—Ç–æ
background (—Ñ–æ–Ω–æ–≤—ã—Ö) –∑–∞–¥–∞–Ω–∏–π. –ù–∞–ø—Ä–∏–º–µ—Ä, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤ JVM - Daemon –ø–æ—Ç–æ–∫–∏.
–û–Ω–∏ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è —Å–±–æ—Ä–∫–æ–π –º—É—Å–æ—Ä–∞ - Garbage collector, –æ–Ω–∏ –æ—Å–≤–æ–±–æ–∂–¥–∞—é—Ç –ø–∞–º—è—Ç—å, —É–¥–∞–ª—è—è
–Ω–µ–Ω—É–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏ —Ç–¥.

–û–±—ä—è–≤–∏—Ç—å –ø–æ—Ç–æ–∫ Daemon –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º)
–ø–æ—Ç–æ–∫–∞ –≤—ã–∑–≤–∞—Ç—å –µ–≥–æ –º–µ—Ç–æ–¥ setDeamon() –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ true, —Ç–µ–º —Å–∞–º—ã–º —Å–æ–æ–±—â–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–µ,
—á—Ç–æ —ç—Ç–æ—Ç –ø–æ—Ç–æ–∫ –±—É–¥–µ—Ç Daemon. –ú–µ—Ç–æ–¥ setDaemon() –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ—Ç–æ–∫ –±—ã–ª
—Å–æ–∑–¥–∞–Ω –∏ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –æ–Ω –±—ã–ª –∑–∞–ø—É—â–µ–Ω. –ï—Å–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–æ—Ç–æ–∫, –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –∏ —É–∂–µ –ø–æ—Å–ª–µ
–≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ setDaemon, —Ç–æ –±—É–¥–µ—Ç –≤—ã–±—Ä–æ—à–µ–Ω IllegalThreadStateException.

–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ—Ç–æ–∫ Daemon –ø–æ—Ç–æ–∫–æ–º –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞–≤ –µ–≥–æ –º–µ—Ç–æ–¥ isDaemon().
*/

public class DaemonThreads {
    public static void main(String[] args) {
        System.out.println("Main thread starts");

        UserThread userThread = new UserThread();
        userThread.setName("user_thread");

        DaemonThread daemonThread = new DaemonThread();
        daemonThread.setName("daemon_thread");
        // daemonThread.setDaemon(true); // –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ Daemon

        userThread.start();
        daemonThread.start();

        daemonThread.setDaemon(true); // –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥ setDaemon –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø–æ—Ç–æ–∫–∞

        System.out.println("Main thread ends");

        /*
        –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –í—ã–≤–æ–¥:

        Main thread starts    // main thread –Ω–∞—á–∞–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É
        Main thread ends      // main thread —Å—Ä–∞–∑—É –∑–∞–∫–æ–Ω—á–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É
        user_thread is daemon: false
        daemon_thread is daemon: true
        1
        2
        A
        3
        4
        5
        B
        6
        7
        8
        C
        9
        10
        11
        D
        12
        13
        14
        E
        15
        16
        17
        F
        18
        19
        20
        G
        21
        22
        23
        H
        24
        25
        26
        I
        27
        28
        29
        J

        Main thread –Ω–∞—á–∞–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, –∑–∞–ø—É—Å—Ç–∏–ª –¥–≤–∞ –ø–æ—Ç–æ–∫–∞ (user_thread –∏ daemon_thread) –∏
        –∑–∞–∫–æ–Ω—á–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, –Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.
        –ó–∞–ø—É—Å–∫–∞—é—Ç—Å—è –¥–≤–∞ –ø–æ—Ç–æ–∫–∞ user_thread –∏ daemon_thread. –ò–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ is "daemon?".
        –ü–æ—Å–ª–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –∑–Ω–∞—á–µ–Ω–∏–π. –°–Ω–∞—á–∞–ª–∞ –≤—ã–≤–µ–ª —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è daemon_thread
        (1, 2), –ø–æ—Ç–æ–º user_thread –≤—ã–≤–µ–ª —Å–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (A) –∏ —Ç–¥. –ò –∫–æ–≥–¥–∞ user_thread –≤—ã–≤–æ–¥–∏
        —Å–≤–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ loop (—Ü–∏–∫–ª–∞), –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, —Ç–æ –∏
        –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ daemon_thread –≤—ã–≤–µ–ª —á–∏—Å–ª–∞
        –≤—Å–µ–≥–æ –ª–∏—à—å –¥–æ 29, –∞ –Ω–µ –¥–æ 1_000.

        –ï—Å–ª–∏ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ setDaemon –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø–æ—Ç–æ–∫–∞, –≤—ã–±—Ä–æ—Å–∏—Ç—å—Å—è Exception -
        IllegalThreadStateException –∏ –ø–æ—Ç–æ–∫ daemon_thread –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
        –¥–æ 1_000, –¥–∞–∂–µ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ—Ç–æ–∫ user_thread –∑–∞–∫–æ–Ω—á–∏—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.
        –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –í—ã–≤–æ–¥:

        1
        2
        A
        3
        4
        5
        B
        ...
        28
        29
        J
        30
        31
        32
        33
        ...
        1000
        */

    }
}

class UserThread extends Thread {
    public void run() {
        System.out.println(Thread.currentThread().getName() +
                " is daemon: " + isDaemon());
        for (char i = 'A'; i <= 'J'; i++) {
            try {
                Thread.sleep(300);
                System.out.println(i);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

class DaemonThread extends Thread {
    public void run() {
        System.out.println(Thread.currentThread().getName() +
                " is daemon: " + isDaemon());
        for (int i = 1; i <= 1_000; i++) {
            try {
                Thread.sleep(100);
                System.out.println(i);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}